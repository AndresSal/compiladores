%{
#include <stdio.h>
FILE *arch;
extern int yylineno;
int yylex(void); 
void yyerror(char *); 

%}

%union {int num;char *td;char *id;char *b;char *c;char *s;float f;}


%token DOSPUNTOS <id>IDENT PCOMA IGUAL PAR_A PAR_C COR_A COR_C LLAV_A LLAV_C <td>TD_ENTERO <td>TD_DECIMAL <td>TD_BOLEANO <td>TD_CARACTER <td>TD_CADENA <num>INTEGER <f>FLOAT <s>STRING <c>CHAR <b>BOOLEAN COMA IF ELSE THEN DO WHILE OPERACION COMPARACION OPLOGICO INPUT OUTPUT RETURN COMENTARIO COMENTARIOD
%type<td> tipodato
%start programa

 
%%
programa 	: opfunciones programa| exp1|opfunciones;

opfunciones:	 funcion
		|exp1
		;				

exp1		: tipodato DOSPUNTOS IDENT PCOMA 			{fprintf(arch,"%s,%s,%d\n",$1,$3,0);}
		| tipodato DOSPUNTOS IDENT IGUAL INTEGER PCOMA		{fprintf(arch,"%s,%s,%d\n",$1,$3,$5);}
		| tipodato DOSPUNTOS IDENT IGUAL BOOLEAN PCOMA		{fprintf(arch,"%s,%s,%s\n",$1,$3,$5);}
		| tipodato DOSPUNTOS IDENT IGUAL CHAR PCOMA		{fprintf(arch,"%s,%s,%s\n",$1,$3,$5);}
		| tipodato DOSPUNTOS IDENT IGUAL STRING PCOMA		{fprintf(arch,"%s,%s,%s\n",$1,$3,$5);}
		| tipodato DOSPUNTOS IDENT IGUAL FLOAT PCOMA		{fprintf(arch,"%s,%s,%f\n",$1,$3,$5);}
		| tipodato DOSPUNTOS IDENT COR_A INTEGER COR_C PCOMA 	{fprintf(arch,"%s,%s,%d\n",$1,$3,$5);}
		; 


tipodato	:TD_ENTERO
		|TD_DECIMAL 	
		| TD_BOLEANO 	
		| TD_CARACTER 	
		| TD_CADENA	
		; 

funcion: 	 encabezado cuerpo;
encabezado:      tipodato DOSPUNTOS IDENT lista {fprintf(arch,"%s,%s\n",$1,$3);}
		;
lista: 		 PAR_A PAR_C
		|PAR_A parametro PAR_C
		;
parametro: 	 deLocal 
		|deLocal COMA parametro
		;
deLocal: 	 tipodato DOSPUNTOS IDENT	{fprintf(arch,"%s,%s,%d\n",$1,$3,0);}
		;
cuerpo: 	 LLAV_A bloquecomando LLAV_C ;
		
bloquecomando: 	 exp1  | exp2  
		|exp1  bloquecomando
		|exp2 bloquecomando
		;	

exp2		 :IDENT IGUAL INTEGER PCOMA		{fprintf(arch,"%d,%s,%d\n",0,$1,$3);}
		|  IDENT IGUAL BOOLEAN PCOMA		{fprintf(arch,"%d,%s,%s\n",0,$1,$3);}
		|   IDENT IGUAL CHAR PCOMA		{fprintf(arch,"%d,%s,%s\n",0,$1,$3);}
		|   IDENT IGUAL STRING PCOMA		{fprintf(arch,"%d,%s,%s\n",0,$1,$3);}
		|   IDENT IGUAL FLOAT PCOMA		{fprintf(arch,"%d,%s,%f\n",0,$1,$3);}
		; 
:

			
%%

void yyerror(char *s) {
 FILE *nota;
nota=fopen("errores.txt","w");
fprintf(nota,"error sint√°ctico en la linea %d",yylineno);
fclose(nota); 
}

int main (int argc, char *argv[]){
extern FILE * yyin;
yyin=fopen(argv[1],"r");
arch=fopen("salida.csv","w");
yyparse();
fclose(arch);
return 0;
}
