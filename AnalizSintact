%{
#include <stdio.h> 
    int yylex(void); 
    void yyerror(char *); 
int yystopparser=0;
%}

%token VOID MAIN PAR_A PAR_CER LLAV_A LLAV_C COR_A COR_CER NOMBRECAMPO ENTERO DECIMAL BOLEANO CADENA TD_ENTERO TD_DECIMAL TD_BOLEANO TD_CADENA ASIGNADOR SUMA RESTA MULTIPLICACION DIVISION AUMENTAR DISMINUIR MAYOR MENOR IGUAL MAYORIGUAL MENORIGUAL NOIGUAL SI NO SIN PARA MIENTRAS

%start programa 

%%

programa     : principal funciones | principal
        ;
principal    : VOID MAIN PAR_A VOID PAR_CER LLAV_A lineascodigos LLAV_C
        ;
lineascodigos    : lineacodigo
        |
        ;
lineacodigo    : lineacodigo linea 
        | linea
        ;
linea        : invocarmetodo CAR_ESP
        | crearvariable CAR_ESP
        | cambiarvalor CAR_ESP
        | bucleCondicion CAR_ESP
        ;
invocarmetodo    : NOMBRECAMPO PAR_A parametrosenvio PAR_CER
        ;
parametrosenvio    : parenvio
        |
        ;
parenvio    : parenvio CAR_ESP penvio
        | penvio
        ;
penvio        : valor
        | NOMBRECAMPO
        ;
valor        : ENTERO
        | DECIMAL
        | BOLEANO
        | CADENA
        ;
crearvariable    : tipodato NOMBRECAMPO 
        | tipodato NOMBRECAMPO asignarvalor
        ;
tipodato    : T_ENTERO
        | T_DECIMAL
        | T_BOLEANO
        | T_CADENA
        ;
asignarvalor    : ASIGNADOR operaasignacion
        | ASIGNADOR valor
        | ASIGNADOR NOMBRECAMPO
        ;
operasignacion    : aritmetica 
        | invocarmetodo
        | incredismivariable
        ; 
aritmetica    : oprcomun
        | oprcomun oprcomplemento
        ;
oprcomun    : valor tipoopr valor
        | valor tipoopr NOMBRECAMPO
        | NOMBRECAMPO tipoopr valor
        | NOMBRECAMPO tipoopr NOMBRECAMPO
        ;
tipoopr        : SUMA
        | RESTA
        | MULTIPLICACION
        | DIVISION
        ;
oprcomplemento    : oprcomplemento oprcom
        | oprcom
        ;
oprcom        : tipoopr valor
        | tipoopr NOMBRECAMPO
        ;
incredismivariable : NOMBRECAMPO indis
        ;
cambiarvalor    : NOMBRECAMPO ASIGNADOR cambvalor
        ;
cambvalor    : valor
        | operasignacion
        | NOMBRECAMPO
        ;
buclecondicion    : condicionif
        | buclewhile
        ;
condicionif    : condicionsi
        | condicionsi condicionno
        | coondicionsi condicionessino condicionno
        ;
condicionsi    : SI PAR_A condicion PAR_CER LLAV_A lineascodigos LLAV_C
        ;
condicion    : valor condicional valor
        | valor condicional NOMBRECAMPO
        | NOMBRECAMPO condicional valor 
        | NOMBRECAMPO condicional NOMBRECAMPO
        ;
condicional    : MAYOR
        | MENOR
        | IGUAL
        | MAYORIGUAL
        | MENORIGUAL
        | NOIGUAL
        ; 
condicionno    : NO LLAV_A lineascodigos LLAV_C
        ;
condicionessino    : condicionessino condicionsino 
        | condicionsino
        ;
condicionsino    : SINO PAR_A condicion PAR_CER COR_A lineascodigos COR_CER
        ;
        ;
buclewhile    : MIENTRAS PAR_A condicion PAR_CER LLAV_A lineascodigos LLAV_C
        ;
funciones    : funciones funcion
        | funcion
        ;
funcion        : tiporetorno NOMBRECAMPO PAR_A parametrosin PAR_CER LLAV_A lineascodigos LLAV_C
        ;
tiporetorno    : tipodato
        | VOID
        ;
parametrosin    : parametros
        |
        ;
parametros    : parametros CAR_ESP parametro
        | parametro
        ;
parametro    : tipodato NOMBRECAMPO
        ;  
%%

void yyerror(char *s) {
    fprintf(stderr, "%s\n", s);
}
int main(void) {
    yyparse();
    return 0;
}
