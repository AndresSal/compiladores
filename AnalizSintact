%{
#include <stdio.h> 
#define YYSTYPE char*
extern int yylex(void); 
extern void yyerror(char *);
extern int yylineno;
extern int yylex(void);
yyparse(void);
extern FILE* arch_entrada;
extern FILE* arch_salida;
extern char* yytext;
%}

%token OP_COMPUESTO
%token CAR_ESP
%token LLAV_A 
%token LLAV_C 
%token PAR_A 
%token PAR_C 
%token COR_A 
%token COR_C 
%token <tipodato>TIPO_DATO 
%token IF 
%token ELSE 
%token ELSE_IF 
%token DO 
%token WHILE 
%token <boleano>BOOLEAN 
%token <entero>INTEGER 
%token <flotante>FLOAT 
%token STRING 
%token CHAR 
%token <string>IDENTIFICADOR 
%token OPERACION
%token OPLOGICO
%token IGUAL
%token COMPARACION
%token INPUT 
%token OUTPUT
%token RETURN  
%token COMENTARIO 
%token COMENTARIOD 
%token DOSPUNTOS
%token PCOMA
%token COMA 
 
%union{
int entero;
float flotante;
char* nombre;
char* tipodato;
bool boleano;
}

%%
program:	 opfunciones program
	 	|deGlobal
	 	|opfunciones
	 	;

deGlobal: 	 TIPO_DATO DOSPUNTOS IDENTIFICADOR PCOMA {fprint(arch_salida,"%s,%s,false,0",yylval.tipodato,yylval.nombre); }
		|TIPO_DATO DOSPUNTOS IDENTIFICADOR LLAV_A INTEGER LLAV_C PCOMA 
		;
opfunciones:	 funcion
		|deGlobal
		|bloquecomando
		|controlFlujo
		;

funcion: 	 encabezado  cuerpo			      		       ;
encabezado:      TIPO_DATO DOSPUNTOS lista
		;
lista: 		 PAR_A PAR_C
		|PAR_A parametro PAR_C
		;
parametro: 	 deLocal 
		|deLocal COMA parametro
		;
deLocal: 	 TIPO_DATO DOSPUNTOS IDENTIFICADOR {fprintf(arch_salida,"%s,%s",$1,$3);}
		;

cuerpo: 	 bloquecomando PCOMA
		|bloquecomando PCOMA cuerpo
		|deLocal PCOMA
		|deLocal PCOMA cuerpo
		;
bloquecomando: 	 LLAV_A  LLAV_C
		|LLAV_A comandosimple LLAV_C
		;
comandosimple: 	 atribucion PCOMA
		|atribucion PCOMA comandosimple
		|opES
		|opES comandosimple
		|controlFlujo
		|controlFlujo comandosimple
		|bloquecomando
		|bloquecomando comandosimple
		|llamarfuncion
		|llamarfuncion comandosimple
		;


