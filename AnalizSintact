%{
#include <stdio.h> 
    int yylex(void); 
    void yyerror(char *); 
int yystopparser=0;
FILE *arch_salida;
%}

%token OP_COMPUESTO CAR_ESP LLAV_A LLAV_C PAR_A PAR_C COR_A COR_C VOID MAIN TD_ENTERO TD_DECIMAL TD_BOLEANO TD_CARACTER TD_CADENA IF ELSE ELSE_IF DO WHILE BOOLEAN INTEGER FLOAT STRING CHAR IDENT INPUT OUTPUT RETURN COMENTARIO COMENTARIOD 
%start programa 

%%

programa     : principal funciones | principal
        ;
principal    : VOID MAIN PAR_A VOID PAR_C LLAV_A lineascodigos LLAV_C
        ;
lineascodigos    : lineacodigo
        |
        ;
lineacodigo    : lineacodigo linea 
        | linea
        ;
linea        : invocarmetodo CAR_ESP
        | crearvariable CAR_ESP
        | cambiarvalor CAR_ESP
        | bucleCondicion CAR_ESP
        ;
invocarmetodo    : IDENT PAR_A parametrosenvio PAR_C
        ;
parametrosenvio    : parenvio
        |
        ;
parenvio    : parenvio CAR_ESP penvio
        | penvio
        ;
penvio        : valor
        | IDENT
        ;
valor        : INTEGER
        | FLOAT
        | STRING
        | CHAR
        | BOOLEAN
        ;
crearvariable    : tipodato IDENT 
        | tipodato IDENT  asignarvalor
        ;
tipodato    : TD_ENTERO
        | TD_DECIMAL
        | TD_BOLEANO
        | TD_CADENA
        ;
asignarvalor    : OP_COMPUESTO operaasignacion
        | OP_COMPUESTO valor
        | OP_COMPUESTO IDENT
        ;
operaasignacion    : aritmetica 
        | invocarmetodo
        | incredismivariable
        ; 
aritmetica    : oprcomun
        | oprcomun oprcomplemento
        ;
oprcomun    : valor tipoopr valor
        | valor tipoopr IDENT
        | IDENT tipoopr valor
        | IDENT tipoopr IDENT
        ;
tipoopr        : CAR_ESP
        |
        ;
oprcomplemento    : oprcomplemento oprcom
        | oprcom
        ;
oprcom        : tipoopr valor
        | tipoopr IDENT
        ;
incredismivariable : IDENT indis
        ;
indis        : CAR_ESP
        ;
cambiarvalor    : IDENT OP_COMPUESTO cambvalor
        ;
cambvalor    : valor
        | operaasignacion
        | IDENT
        ;
bucleCondicion    : condicionif
        | buclewhile
        ;
condicionif    : condicionsi
        | condicionsi condicionno
        | condicionsi condicionessino condicionno
        ;
condicionsi    : IF PAR_A condicion PAR_C LLAV_A lineascodigos LLAV_C
        ;
condicion    : valor condicional valor
        | valor condicional IDENT
        | IDENT condicional valor 
        | IDENT condicional IDENT
        ;
condicional    : OP_COMPUESTO
        |
        ; 
condicionno    : ELSE LLAV_A lineascodigos LLAV_C
        ;
condicionessino    : condicionessino condicionsino 
        | condicionsino
        ;
condicionsino    : ELSE_IF PAR_A condicion PAR_C COR_A lineascodigos COR_C
        ;

buclewhile    : WHILE PAR_A condicion PAR_C LLAV_A lineascodigos LLAV_C
        ;
funciones    : funciones funcion
        | funcion
        ;
funcion        : tiporetorno IDENT PAR_A parametrosin PAR_C LLAV_A lineascodigos LLAV_C
        ;
tiporetorno    : tipodato
        | VOID
        ;
parametrosin    : parametros
        |
        ;
parametros    : parametros CAR_ESP parametro
        | parametro
        ;
parametro    : tipodato IDENT
        ;  
%%

void yyerror(char *s) {
    fprintf(stderr, "%s\n", s);
}
int main(void) {
    yyparse();
    return 0;
}
