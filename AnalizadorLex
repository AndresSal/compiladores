%{
#include <stdio.h>
//FILE *arch_out;
#include "P_sintactic.tab.h";
%}
%option yylineno
omitir " "|\t|\n
caracter [A-Za-z]
digito [0-9]
OpCompuesto "<="|">="|"=="|"!="|"&&"|"||"|"<"|">"
caresp ","|";"|":"|"+"|"-"|"*"|"/"|"="|"!"|"&"|"$"|"++"|"--"
%%
{omitir}* {;}
{OpCompuesto}+ {return OP_COMPUESTO; }
{caresp}+ {return CAR_ESP;}
"{" {return LLAV_A;}
"}" {return LLAV_C;}
"(" {return PAR_A;}
")" {return PAR_C;}
"[" {return COR_A;}
"]" {return COR_C;}
"void" {return VOID;}
"main" {return MAIN;}
"int" {return TD_ENTERO;}
"float" {return TD_DECIMAL;}
"boolean" {return TD_BOLEANO;}
"char" {return TD_CARACTER;}
"string" {return TD_CADENA;}
"if" {return IF;}
"else" {return ELSE;}
"else if" {return ELSE_IF;}
"do" {return DO;}
"while" {return WHILE;}
"true"|"false" {return BOOLEAN;}
{digito}+ {return INTEGER;}
{digito}*"."{digito}+ {return FLOAT;}
"\""({digito}|{caracter}|" ")*"\"" {return STRING;}
"\'"{caracter}{0,1}"\'" {return CHAR;}
{caracter}({caracter}|{digito})* {return IDENT;}
"input:" {return INPUT;}
"output:" {return OUTPUT;}
"return:" {return RETURN;}
"//".*? {return COMENTARIO;}
"/*"[^"*/"]* { return COMENTARIOD ;}
. {printf("error en la linea: %d\n",yylineno);}
%%
main (int argc, char *argv[]){yyin = fopen(argv[1],"r");
//arch_out=fopen("prueba.txt","w");
yyparse();
//fclose(arch_out);
}
